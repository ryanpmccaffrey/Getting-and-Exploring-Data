htmlCode <- GET("http://biostat.jhsph.edu/~jleek/contact.html")
content <- content(htmlCode, as="text")
htmlParsed <- htmlParse(content, asText=TRUE)
xpathSApply(htmlParsed, "//title", xmlValue)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n=10)
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
d <- d[, grep("^[^filler]", names(d))]
sum(d[, 4])
readLines(url)
print (url)
connection <- url(url)
htmlCode <- readLines(connection)
close(connection)
print (url)
url(ulr)
url(url)
connection <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
htmlCode <- readLines(connection)
read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
data <- read.csv("/Users/ryanmccaffrey/Documents/Getting and Exploring Data")
data <- read.csv("/Users/ryanmccaffrey/Documents/Getting and Exploring Data/getdata-wksst8110.for")
View(data)
View(data)
c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4)
d <- c(3,4,5)
d
d <- t(d)
d
c <- t(d)
c
t(c)
sample(5)
sample(6)
set.seed help
help set
help(set.seed)
library("plyr")
install.packages("plyr")
install.packages("plyr")
len(c)
length(c)
size(c)
sizeof(c)
dim(c)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(fileUrl,destfile=""/Users/ryanmccaffrey/Documents/Getting and Exploring Data/testfile.csv",method=curl)
download.file(fileUrl,destfile="/Users/ryanmccaffrey/Documents/Getting and Exploring Data/testfile.csv",method=curl)
download.file(fileUrl,destfile="/Users/ryanmccaffrey/Documents/Getting and Exploring Data/testfile.csv",method="curl")
restData <- read.csv("/Users/ryanmccaffrey/Documents/Getting and Exploring Data/testfile.csv)
restData <- read.csv("/Users/ryanmccaffrey/Documents/Getting and Exploring Data/testfile.csv")
restData[4]
type(restData)
head(restData)
str(c)
str(data)
n <- c(2,3,5)
s <- c("a","b","c","d")
b <- c(TRUE,FALSE,TRUE,FALSE)
x <- list(n,s,b,3)
x
data.frame(n,s,b)
data.frame(n,s,b,3)
x[2]
x[2,4]
x[c(2,4)]
x[c(2,3)]
data.frame(s,b,n)
data.frame(s,b)
f<-data.frame(s,b)
f["s"]
install.packages("downloader")
.3*.4+.35*.6+.25*.5
.12/.0455
.12/.455
seq(1,2)
seq(1:2)
seq(1:7)
help (print)
yesno <- sample(c("yes","no"),size=10,replace=TRUE)
yesno
yesnofac <- factor(yesno,levels=c("yes","no"))
relevel(yesnofac,ref="yes")
as.numeric(yesnofac)
help (relevel)
relevel(yesnofac,ref="no")
as.numeric(yesnofac)
rm(list=ls(all=T))
head(mtcars)
library(reshape2)
install.packages(reshape3)
install.packages(reshape2)
library(reshape2)
rownames(mtcars)
head(mtcars)
colames(mtcars)
colnames(mtcars)
class(mtcars)
str(mtcars)
mtcars <- mtcars
View(mtcars)
View(mtcars)
print (row.names)
row.names
mtcars.row.names
rownames(mtcars)
t(rownames(mtcars))
head(InsectSpray)
head(InsectSprays)
dim(InsectSprays)
tapply(InsectSprays$count,InsectSprays$spray,count)
tapply(InsectSprays$count,InsectSprays$spray,sum)
hist(mtcars$wt,breaks=5)
hist(mtcars$wt,breaks=11)
hist(mtcars$wt,breaks=7)
hist(mtcars$wt,breaks=4)
hist(mtcars$drat,breaks=4)
hist(mtcars$drat,breaks=20)
hist(mtcars$drat,breaks=11)
library(dplyr)
install.packages("dplyr")
library("dplyr")
library("httr")
x<-c(1,3,5)
y<-c(3,4,6)
cbind(x,y)
x
dim(cbind(x,y))
summary(cbind(x,y))
str(cbind(x,y))
type(cbind(x,y))
class(cbind(x,y))
x<-vector("numeric",length=10)
x
length(x)
x<-1:3
x
x<-0:3
x
x<--1:3
x
a <- c(1,3,5,7)
b <- c(1,2,4,8)
c(a,b)
cbind(a,b)
rbind(a,b)
s[2:4]
s[c(2,3)]
s[3]
x <- c(4, "a", TRUE)
class(x)
x <- c(1,2,3)
y <- c(1,2,3)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
x<-1:4
y<-2:3
x+y
x <- c(2, "a", "b", TRUE)
class(x)
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <- 0
x
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
data(iris)
?iris
mean(2,3)
mean(2,4)
head(Sepal.Length)
head(iris)
mean(iris$Sepal.Length)
mean(iris[iris$Species == "virginica",]$Sepal.Length)
mean(iris[iris$Species == "virginica"]$Sepal.Length)
iris[iris$Species == "virginica",]
iris[,iris$Species == "virginica"]
head(iris)
apply(iris[,1:4],2,mean)
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
?apply
debug(ls)
ls
ls
set.seed(1)
rpois(5, 2)
?rpois
lskdf
sd
dfk
"c"
d
df
q
?debug
exit
ksdfl
?rpois
summaryRprof()
library(datasets)
Rprof()
summaryRprof()
summary(Rprof())
rm(list=ls(all=T))
setwd()
setwd(Macintosh HD ▸ Users ▸ ryanmccaffrey ▸ Documents ▸ R Programming ▸ Slides)
setwd("Macintosh HD/Users/ryanmccaffrey")
setwd("/Users/ryanmccaffrey")
setwd("/Users/ryanmccaffrey/Documents/R Programming/Slides")
directory <- "/Users/ryanmccaffrey/Documents/R Programming/Slides"
setwd(directory)
directory <- "/Users/ryanmccaffrey/Documents/R Programming/Slides/specdata"
setwd(directory)
getwd()
read.csv("001")
read.csv("001.csv")
c(0,0,0)
x<-c(0,0,0)
x+1
id=1:332
paste0("0",id)
library(stringr)
str_pad(anim, 6, pad = "0")
library(stringr)
str_pad(id, 6, pad = "0")
library(stringr)
str_pad(id, 3, pad = "0")
library(stringr)
file <- str_pad(id, 3, pad = "0")
file
file[1]
file[id]
read.csv(paste(file[id],".csv"))
paste(file[id])
paste(file[1],".csv")
paste(file[1],sep="",".csv")
read.csv(paste(file[1],sep="",".csv"))
read.csv(paste(file[id],sep="",".csv"))
length(id)
for (n in id) {
read.csv(paste(file[n],sep="",".csv"))
}
for (n in id) {
read.csv(paste(file[n],sep="",".csv"))
}
for (n in id) {
x<-read.csv(paste(file[n],sep="",".csv"))
apply(x$sulfate,mean)
}
for (n in id) {
x<-read.csv(paste(file[n],sep="",".csv"))
}
dims(x)
dim(x)
rep(id)
for (n in id) {
x<-rbind(x,read.csv(paste(file[n],sep="",".csv")))
}
dim(x)
mean(as.matrix(x[sulfate]),na.rm=TRUE)
mean(as.matrix(x$sulfate),na.rm=TRUE)
mean(as.matrix(paste(x$,"sulfate"),na.rm=TRUE)
mean(as.matrix(x[sulfate]),na.rm=TRUE)
pullutant <- sulfate
mean(as.matrix(x$pullutant),na.rm=TRUE)
pullutant = sulfate
mean(as.matrix(x$pullutant),na.rm=TRUE)
pullutant = "sulfate"
mean(as.matrix(x$pullutant),na.rm=TRUE)
x(sulfate)
x
mean(as.matrix(x$sulfate),na.rm=TRUE)
mean(as.matrix(x$nitrate),na.rm=TRUE)
type(x)
types(x)
head(x)
str(x)
mean(x[sulfate],na.rm=TRUE)
mean(x["sulfate"],na.rm=TRUE)
x[sulfate]
x["sulfate"]
mean(x["sulfate"],na.rm=TRUE)
apply(x["sulfate"],na.rm=TRUE,mean)
apply(x["sulfate"],na.rm=TRUE,2,mean)
mean(as.matrix(x$sulfate),na.rm=TRUE)
pollutantmean("/Users/ryanmccaffrey/Documents/R Programming/Slides/specdata", "sulfate", 1:10)
pollutantmean("/Users/ryanmccaffrey/Documents/R Programming/Slides/specdata", "sulfate", 1:10)
setwd(directory)
getwd()
ls
ls(directory)
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantmean("/Users/ryanmccaffrey/Documents/R Programming/Slides/specdata", "sulfate", 1:10)
pollutantmean("/Users/ryanmccaffrey/Documents/R Programming/Slides/specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantmean("/Users/ryanmccaffrey/Documents/R Programming/Slides/specdata", "sulfate", 1:10)
rm(ls=list(all=T))
rm(list=ls(all=T))
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","sulfate",1:10)
source("pollutantmean.r")
source("pollutantmean.R")
setwd("/Users/ryanpmccaffrey/Documents/R Programming/Slides/specdata")
setwd("/Users/ryanpmccaffrey/Documents/R Programming/Slides/")
getwd()
setwd("/Users/ryanmccaffrey/Documents/R Programming/Slides/")
setwd("/Users/ryanpmccaffrey/Documents/R Programming/Slides/specdata")
setwd("/Users/ryanmccaffrey/Documents/R Programming/Slides/specdata")
source("pollutantmean.R")
source("pollutantmean.R")
dget("pollutantmean.R")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
pollutantData<-data.frame()
for(file in rep(id)){
pollutantData<-rbind(pollutantData,read.table(paste(directory,"/",sprintf("%03d", file),".csv",sep=""),sep=",",header=TRUE))
#head(pollutantData)
#mean(pollutantData[!is.na(pollutantData[pollutant])][pollutant])
#index<-!is.na(pollutantData[pollutant])
#class(pollutantData)
#mean(as.matrix(pollutantData[complete.cases(pollutantData[pollutant]),][pollutant]))
}
mean(as.matrix(pollutantData[pollutant]),na.rm=TRUE)
}
pollutantmean("specdata","sulfate",1:10)
setwd("/Users/ryanmccaffrey/Documents/R Programming/Slides")
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","sulfate",1:332)
pollutantmean("specdata","sulfate",1:12)
source("pollutantmean.R")
source("pollutantmean.r")
}
rm(list=ls(all=T))
source("polluntantmean.r")
source("polluntantmean.R")
getwd()
source("/specdata/polluntantmean.R")
source("./specdata/polluntantmean.R")
getwd()
load("/specdata/pollutantmean.r")
load("./specdata/pollutantmean.r")
getwd()
source("add2.R")
add2(4)
getwd()
list.files()
setwd()
setwd("/Users/ryanmccaffrey/Documents/R Programming/Slides/")
list.files()
getwd()
source("pollutantmean.R")
open("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata","sulfate",1:10)
source("pollutantmean.R")
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","sulfate",1:332)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
2
submit()
submit()
submit()
submit()
getwd()
rm(list=ls(all=T))
list=ls(all=T)
list
id=1:332
paste(sprintf("%03d", as.numeric(id)), ".csv", sep="")
paste(sprintf("%04d", as.numeric(id)), ".csv", sep="")
rm(list=ls(all=T))
source("complete.R")
complete("specdata",id=1:332)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("corr.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
rm(list=ls(all=T))
source("corr.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
rm(list=ls(all=T))
source("corr.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("complete.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("getmonitor.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
rm(list=ls(all=T))
getwd()
list.files
list.files("/Users/ryanmccaffrey/Documents/R Programming/Slides")
setwd("/Users/ryanmccaffrey/Documents/R Programming/Slides/rprog-data-ProgAssignment3-data")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character") head(outcome)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
View(outcome)
View(outcome)
ncol(outcome)
names(outcome)
class(outcome)
str(outcome)
summary(outcome)
outcome[,11]
names(outcome[11])
outcome[,11]<-as.numeric(outcome[,11])
outcome[,11]<-as.numeric(outcome[, 11])
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[,11])
names(outcome[11])
outcome$State
getwd()
setwd("/Users/ryanmccaffrey/Documents/Getting and Cleaning Data/Slides")
setwd("/Users/ryanmccaffrey/Documents/Getting and Exploring Data/Slides")
x<-read.csv("getdata-data-ss06pid.csv")
list.files()
setwd("/Users/ryanmccaffrey/Documents/Getting and Exploring Data")
x<-read.csv("getdata-data-ss06pid.csv")
head(x)
names(x)
class(x)
x["VAL"]
x["val"]
x[val]
x$val
View(x)
View(x)
length(x$VAL)
getwd()
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url=fileUrl,destfile="idaho_housing.csv",mode="w",method="curl")
list.files(".")
idaho_housing <- read.csv("idaho_housing.csv")
x<-read.csv("getdata-data-ss06pid.csv")
length(x$VAL)
length(x$VAL==24)
length(x$VAL==2)
x$VAL==2
as.na(x$VAL==2)
rm.na(length(x$VAL==24))
na.rm(length(x$VAL==24))
length(x$VAL,rm.na=TRUE)
sum(x$VAL,rm.na=TRUE)
mean(x$VAL)
length(x$VAL[x$VAL==24])
length(x$VAL[x$VAL==24],rm.na=TRUE)
length(x$VAL[x$VAL==24]),rm.na=TRUE
max(x$VAL[x$VAL==24],rm.na=TRUE)
length(x$VAL[x$VAL==24],rm.na=TRUE)
length(x$VAL[!is.na(x$VAL) & x$VAL==24])
x$FES
> fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
> download.file(fileUrl, destfile="./data/microdata3.csv", method="curl")
> DT <- fread("./data/microdata3.csv")
> file.info("./data/microdata3.csv")$size
> system.time(DT[,mean(pwgtp15),by=SEX])
> system.time(mean(DT[DT$SEX==1,]$pwgtp15))+system.time(mean(DT[DT$SEX==2,]$pwgtp15))
> system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
> system.time(mean(DT$pwgtp15,by=DT$SEX))
> system.time(tapply(DT$pwgtp15,DT$SEX,mean))
> system.time(rowMeans(DT)[DT$SEX==1])+system.time(rowMeans(DT)[DT$SEX==2])
