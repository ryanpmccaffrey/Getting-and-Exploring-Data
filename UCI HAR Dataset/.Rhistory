require(jsonlite)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications
#    Insert your values below - if secret is omitted, it will look it up in
#    the GITHUB_CONSUMER_SECRET environmental variable.
#
#    Use http://localhost:1410 as the callback url
myapp <- oauth_app("quiz2", "ddb0d599de51ccd02f4b", secret="6af1109f6ecf442d292425087d49bb13d9bbe9c8")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)
> oauth_endpoints("github")
> myapp <- oauth_app("github", "ClientID", "ClientSecret")
> github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
> req <- GET("https://api.github.com/rate_limit", config(token = github_token))
> stop_for_status(req)
> content(req)
> BROWSE("https://api.github.com/users/jtleek/repos",authenticate("Access Token","x-oauth-basic","basic"))
library(httr)
library(httpuv)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications
#    Insert your values below - if secret is omitted, it will look it up in
#    the GITHUB_CONSUMER_SECRET environmental variable.
#
#    Use http://localhost:1410 as the callback url
myapp <- oauth_app("TestingGitHubAPI", "5405f6d506a62a1fbdc9","6fecea8af78cf96bcf639863b71b5f52c0a1d39d")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
content(req)
library(jsonlite)
json1 = content(req)
json2 = jsonlite::fromJSON(toJSON(json1))
repo <- json2[4,]
names(repo)
repo$created_at
source('~/.active-rstudio-document')
install.packages("httpuv")
source('~/.active-rstudio-document')
library(jsonlite)
json1=content(req)
repo$created_at
library(jsonlite)
jsonData <-- fromJSON("https://api.github.com/users/jtleek/repos")
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
names(jsonData)
rm(list=ls(all))
rm(list=ls(all=T))
source('~/.active-rstudio-document')
repo$created_at
display repo$created_at
print repo$created_at
print (repo$created_at)
source('~/.active-rstudio-document')
repo <- json2[4,]
print (repo)
library(data.table)
library(data.tables)
library(data.table)
install.packages(data.table)
install.packages("data.table"")
lksdf
ksdflk
close
install.packages("data.table)
install.packages("data.table")
library(data.table)
library("data.table")
acs <- read.csv("C:/Documents/Getting and Cleaning Data/getdata-data-ss06pid.csv")
getwd()
setwd()
setwd("C:")
setwd("C:/Documents")
acs <- read.csv("C:/My Documents/Getting and Cleaning Data/getdata-data-ss06pid.csv")
setwd("c:/my documents")
read.csv("getdata-data-ss06pid.csv")
acs <- read.csv("/Users/ryanmccaffrey/Documents/Getting and Exploring Data/getdata-data-ss06pid.csv")
sqldf("select pwgtp1 from acs where AGEP < 50")
library("sqldf")
install.packages("sqldf")
library("sqldf")
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select * from acs where AGEP < 50")
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select * from acs")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
acs
head(acs)
head(acs)
View(acs)
View(acs)
View(acs)
View(acs)
View(acs)
princeton (repo$created_at)
print (repo$created_at)
list(output[[4]]$name, output[[4]]$created_at)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
output <- content(req)
list(output[[4]]$name, output[[4]]$created_at)
content(req)
names(json1)
names(req)
req("date")
req["date"]
content(req)
BROWSE("https://api.github.com/users/jtleek/repos",authenticate("Access Token","x-oauth-basic","basic"))
content(req)[4]
a <- content(req)
a[4]
1=4
1=1
1==3
1==1
data1 <- unique(acs$AGEP)
head(data1)
data1
sqldf("select distinct AGEP from acs")
data2 <- sqldf("select distinct AGEP from acs")
data1 == data2
rm(list=ls(all=T))
install.packages("httr")
install.packages("httr")
library("httr")
req <- get("http://biostat.jhsph.edu/~jleek/contact.html ")
req <- get("http://biostat.jhsph.edu/~jleek/contact.html")
req <- GET("http://biostat.jhsph.edu/~jleek/contact.html")
connection <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(connection)
close(connection)
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
data <- GET("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n=10)
close(connection)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
readLines(url)
require(httr)
require(XML)
htmlCode <- GET("http://biostat.jhsph.edu/~jleek/contact.html")
content <- content(htmlCode, as="text")
htmlParsed <- htmlParse(content, asText=TRUE)
xpathSApply(htmlParsed, "//title", xmlValue)
install.packages("httr")
install.packages("httr")
require(httr)
require(XML)
htmlCode <- GET("http://biostat.jhsph.edu/~jleek/contact.html")
content <- content(htmlCode, as="text")
htmlParsed <- htmlParse(content, asText=TRUE)
xpathSApply(htmlParsed, "//title", xmlValue)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n=10)
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
d <- d[, grep("^[^filler]", names(d))]
sum(d[, 4])
readLines(url)
print (url)
connection <- url(url)
htmlCode <- readLines(connection)
close(connection)
print (url)
url(ulr)
url(url)
connection <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
htmlCode <- readLines(connection)
read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
data <- read.csv("/Users/ryanmccaffrey/Documents/Getting and Exploring Data")
data <- read.csv("/Users/ryanmccaffrey/Documents/Getting and Exploring Data/getdata-wksst8110.for")
View(data)
View(data)
c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4)
d <- c(3,4,5)
d
d <- t(d)
d
c <- t(d)
c
t(c)
sample(5)
sample(6)
set.seed help
help set
help(set.seed)
library("plyr")
install.packages("plyr")
install.packages("plyr")
len(c)
length(c)
size(c)
sizeof(c)
dim(c)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(fileUrl,destfile=""/Users/ryanmccaffrey/Documents/Getting and Exploring Data/testfile.csv",method=curl)
download.file(fileUrl,destfile="/Users/ryanmccaffrey/Documents/Getting and Exploring Data/testfile.csv",method=curl)
download.file(fileUrl,destfile="/Users/ryanmccaffrey/Documents/Getting and Exploring Data/testfile.csv",method="curl")
restData <- read.csv("/Users/ryanmccaffrey/Documents/Getting and Exploring Data/testfile.csv)
restData <- read.csv("/Users/ryanmccaffrey/Documents/Getting and Exploring Data/testfile.csv")
restData[4]
type(restData)
head(restData)
str(c)
str(data)
n <- c(2,3,5)
s <- c("a","b","c","d")
b <- c(TRUE,FALSE,TRUE,FALSE)
x <- list(n,s,b,3)
x
data.frame(n,s,b)
data.frame(n,s,b,3)
x[2]
x[2,4]
x[c(2,4)]
x[c(2,3)]
data.frame(s,b,n)
data.frame(s,b)
f<-data.frame(s,b)
f["s"]
install.packages("downloader")
.3*.4+.35*.6+.25*.5
.12/.0455
.12/.455
seq(1,2)
seq(1:2)
seq(1:7)
help (print)
yesno <- sample(c("yes","no"),size=10,replace=TRUE)
yesno
yesnofac <- factor(yesno,levels=c("yes","no"))
relevel(yesnofac,ref="yes")
as.numeric(yesnofac)
help (relevel)
relevel(yesnofac,ref="no")
as.numeric(yesnofac)
rm(list=ls(all=T))
head(mtcars)
library(reshape2)
install.packages(reshape3)
install.packages(reshape2)
library(reshape2)
rownames(mtcars)
head(mtcars)
colames(mtcars)
colnames(mtcars)
class(mtcars)
str(mtcars)
mtcars <- mtcars
View(mtcars)
View(mtcars)
print (row.names)
row.names
mtcars.row.names
rownames(mtcars)
t(rownames(mtcars))
head(InsectSpray)
head(InsectSprays)
dim(InsectSprays)
tapply(InsectSprays$count,InsectSprays$spray,count)
tapply(InsectSprays$count,InsectSprays$spray,sum)
hist(mtcars$wt,breaks=5)
hist(mtcars$wt,breaks=11)
hist(mtcars$wt,breaks=7)
hist(mtcars$wt,breaks=4)
hist(mtcars$drat,breaks=4)
hist(mtcars$drat,breaks=20)
hist(mtcars$drat,breaks=11)
library(dplyr)
install.packages("dplyr")
library("dplyr")
library("httr")
x<-c(1,3,5)
y<-c(3,4,6)
cbind(x,y)
x
dim(cbind(x,y))
summary(cbind(x,y))
str(cbind(x,y))
type(cbind(x,y))
class(cbind(x,y))
x<-vector("numeric",length=10)
x
length(x)
x<-1:3
x
x<-0:3
x
x<--1:3
x
a <- c(1,3,5,7)
b <- c(1,2,4,8)
c(a,b)
cbind(a,b)
rbind(a,b)
s[2:4]
s[c(2,3)]
s[3]
x <- c(4, "a", TRUE)
class(x)
x <- c(1,2,3)
y <- c(1,2,3)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
x<-1:4
y<-2:3
x+y
x <- c(2, "a", "b", TRUE)
class(x)
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <- 0
x
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
data(iris)
?iris
mean(2,3)
mean(2,4)
head(Sepal.Length)
head(iris)
mean(iris$Sepal.Length)
mean(iris[iris$Species == "virginica",]$Sepal.Length)
mean(iris[iris$Species == "virginica"]$Sepal.Length)
iris[iris$Species == "virginica",]
iris[,iris$Species == "virginica"]
head(iris)
apply(iris[,1:4],2,mean)
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
?apply
debug(ls)
ls
ls
set.seed(1)
rpois(5, 2)
?rpois
lskdf
sd
dfk
"c"
d
df
q
?debug
exit
ksdfl
?rpois
summaryRprof()
library(datasets)
Rprof()
summaryRprof()
summary(Rprof())
swirl()
library(swirl)
rm(list=ls(all=TRUE))
swirl()
getwd()
ls
ls()
x<-9
ls()
nxt()
ls()
list.files()
?list.files()
?list.files
args(list.files())
args(list.files)
old.dir<-x
old.dir<-list.files()
old.dir<-getwd()
info()
testdir
testdir<-old.dir
dir.creat("testdir")
dir.create("testdir")
skip()
rm(ls(list=all))
rm(ls=list(all=T))
rm(list=ls(all=T))
getwd()
setwd("/Users/ryanpmccaffrey/Documents/Getting and Exploring Data/UCI HAR Dataset")
setwd("/Users/ryanmccaffrey/Documents/Getting and Exploring Data/UCI HAR Dataset")
ls()
list.files()
training = read.csv("train/X_train.txt", sep="", header=FALSE)
head(training)
source('~/Documents/Getting and Exploring Data/run_analysis.R')
head(training)
head(training,13)
features = read.csv("features.txt", sep="", header=FALSE)
features
features
head(features)
head(features)
features[,2]
features[,2] = gsub("-mean", "Mean", features[,2])
features[,2] = gsub('-std', 'Std', features[,2])
features[,2] = gsub('-std', 'Std', features[,2])
source('~/Documents/Getting and Exploring Data/run_analysis.R')
testing[,562] = read.csv("test/Y_test.txt", sep="", header=FALSE)
testing[,563] = read.csv("test/subject_test.txt", sep="", header=FALSE)
source('~/Documents/Getting and Exploring Data/run_analysis.R')
head(features)
head
features
features = read.csv("features.txt", sep="", header=FALSE)
features[,2] = gsub("-mean", "Mean", features[,2])
features[,2] = gsub("-std", "Std", features[,2])
features[,2] = gsub("[-()]", '', features[,2])
features
colsWeWant <- grep(".*Mean.*|.*Std.*", features[,2])
colsWeWant
hi=colsWeWant
hi==colsWeWant
colsWeWant <- grep(".*Mean.*",".*Std.*", features[,2])
hi==colsWeWant
colsWeWant
colsWeWant <- grep("Mean|Std", features[,2])
colsWeWant
hi==colsWeWant
features <- features[grep("Mean|Std",features[,2]),]
features
colsWeWant <- c(colsWeWant, 562, 563)
source('~/.active-rstudio-document')
features$V2
dims(features)
dim(features)
features
source('~/Documents/Getting and Exploring Data/run_analysis.R')
rm(ls=list(all=T))
rm(list=ls(all=T))
training = read.csv("train/X_train.txt", sep="", header=FALSE)
training[,562] = read.csv("train/Y_train.txt", sep="", header=FALSE)
training[,563] = read.csv("train/subject_train.txt", sep="", header=FALSE)
testing = read.csv("test/X_test.txt", sep="", header=FALSE)
testing[,562] = read.csv("test/Y_test.txt", sep="", header=FALSE)
testing[,563] = read.csv("test/subject_test.txt", sep="", header=FALSE)
activityLabels = read.csv("activity_labels.txt", sep="", header=FALSE)
features = read.csv("features.txt", sep="", header=FALSE)
features[,2] = gsub("-mean", "Mean", features[,2])
features[,2] = gsub("-std", "Std", features[,2])
features[,2] = gsub("[-()]", '', features[,2])
# Combine training and testing datasets
combinedData=cbind(training,testing)
rm(list=ls(all=T))
source('~/Documents/Getting and Exploring Data/run_analysis.R')
View(tidy)
View(tidy)
head(tidy)
tidy[,89] = NULL
write.table(tidy, "tidy.txt", sep="\t",row.name=FALSE)
tidy
head(tidy)
View(tidy)
par("lty")
library()
search("mgcv")
search(mgcv)
search()
library(Rcpp)
search()
install.packages("ggplot2")
?ggplot2
?ggplot2()
library(ggplot2)
library()
search()
library(gglplot2)
library(ggplot2)
library(ggplot2)
library()
library(ggplot2)
install.packages('ggplot2', dependencies = TRUE)
library(ggplot2)
